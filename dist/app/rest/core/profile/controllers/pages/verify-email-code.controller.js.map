{"version":3,"file":"verify-email-code.controller.js","sources":["../../../../../../../src/app/rest/core/profile/controllers/pages/verify-email-code.controller.js"],"sourcesContent":["const VerifyEmailCodeController = (userModel, authService) => {\r\n    return {\r\n        title: 'Verify Email | Aminuty',\r\n        user: '',\r\n        auth: authService,\r\n        res:'',\r\n        token:'',\r\n\r\n        error:{\r\n            token:'',\r\n        },\r\n        verifyEmail(){\r\n            this.mToken=(localStorage.getItem(\"tokens\"))? JSON.parse(localStorage.getItem(\"tokens\")).access.token:''\r\n\r\n            if(!this.token){\r\n                console.log('username is empty');\r\n                this.error.token= '(code is empty)';\r\n            } else{\r\n                this.error.token= '';\r\n            }\r\n\r\n            if(this.token){\r\n                console.log('All Fields are completed');\r\n                var mToken ={\r\n                    token:this.token,\r\n                }\r\n                this.res=this.auth.verifyEmail(mToken)\r\n\r\n                if(this.res.code === 401){\r\n                    console.log('Error Code From AuthController')\r\n                    console.log(this.res.code)\r\n                    console.log('Error Message From AuthController')\r\n                    console.log(this.res.message)\r\n                    this.error.token= '(Verify Email Failed , token expired. Go to forgot page)';\r\n                }else {\r\n                    console.log('The response is refresh token from Auth: ')\r\n                    console.log(this.res)\r\n                    var mUser = {\r\n                        email:this.user.email,\r\n                        id:this.user.id,\r\n                        isEmailVerified:true,\r\n                        name:this.user.name,\r\n                        role:this.user.role,\r\n                    }\r\n\r\n                    localStorage.setItem('user',JSON.stringify(mUser));\r\n                    //Route('home','')\r\n\r\n\r\n\r\n                }\r\n\r\n            }\r\n        },\r\n    }\r\n}\r\nexport default VerifyEmailCodeController\r\n"],"names":["VerifyEmailCodeController","userModel","authService","mToken","mUser"],"mappings":"AAAK,MAACA,EAA4B,CAACC,EAAWC,KACnC,CACH,MAAO,yBACP,KAAM,GACN,KAAMA,EACN,IAAI,GACJ,MAAM,GAEN,MAAM,CACF,MAAM,EACT,EACD,aAAa,CAUT,GATA,KAAK,OAAQ,aAAa,QAAQ,QAAQ,EAAI,KAAK,MAAM,aAAa,QAAQ,QAAQ,CAAC,EAAE,OAAO,MAAM,GAElG,KAAK,MAIL,KAAK,MAAM,MAAO,IAHlB,QAAQ,IAAI,mBAAmB,EAC/B,KAAK,MAAM,MAAO,mBAKnB,KAAK,MAAM,CACV,QAAQ,IAAI,0BAA0B,EACtC,IAAIC,EAAQ,CACR,MAAM,KAAK,KACd,EAGD,GAFA,KAAK,IAAI,KAAK,KAAK,YAAYA,CAAM,EAElC,KAAK,IAAI,OAAS,IACjB,QAAQ,IAAI,gCAAgC,EAC5C,QAAQ,IAAI,KAAK,IAAI,IAAI,EACzB,QAAQ,IAAI,mCAAmC,EAC/C,QAAQ,IAAI,KAAK,IAAI,OAAO,EAC5B,KAAK,MAAM,MAAO,+DAChB,CACF,QAAQ,IAAI,2CAA2C,EACvD,QAAQ,IAAI,KAAK,GAAG,EACpB,IAAIC,EAAQ,CACR,MAAM,KAAK,KAAK,MAChB,GAAG,KAAK,KAAK,GACb,gBAAgB,GAChB,KAAK,KAAK,KAAK,KACf,KAAK,KAAK,KAAK,IAClB,EAED,aAAa,QAAQ,OAAO,KAAK,UAAUA,CAAK,CAAC,CAKpD,CAEJ,CACJ,CACJ"}